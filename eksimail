#! /usr/bin/perl

package eksimail;
our $VERSION='2.32';

use warnings;
use strict;

use WWW::Eksi 0.32;
use DateTime;
use File::Slurp;
use Getopt::Long;
use MIME::Lite;

=head1 NAME

eksimail - Deliver list of eksisozluk entries

=head1 DESCRIPTION

Download, merge & deliver lists of entries from eksisozluk.com

Saves merged file at `/tmp/{year}-{week_of_year}.html`.

=head1 SYNOPSIS

    ./eksi-mail --list=weekly --send-email --sleep 10 --from=your@email.com --to=one@subscriber.com --to=two@subscriber.com

 - Add `FROM:` and `TO:` addresses with command line arguments. You can add more than one receivers.
 - If you want to deliver emails, make sure to use `--send-email` (otherwise it will not send).
 - Adjust politeness delay (for web crawl) with `--sleep`. It's set to 5 seconds by default.

=head1 Arguments

=head2 list

  - `weekly`: Top 20 posts from last week, published by eksisozluk.com. Output is saved at `/tmp/{year}-{week_of_year}.html`.
  - `daily`: Most popular entries from yesterday, published by eksisozluk.com. Output is saved at `/tmp/{ymd}.html`.

=head2 send-email

  - Does not send any email until this flag is set

=head2 sleep

  - Amount of seconds to sleep between each request. This is passes to `WWW::Eksi` as politeness delay argument. Defaults to 5 if not provided.

=head2 from

  - Email address that email will be sent from

=head2 to

  - Email address to send email to. This argument can be used more than once (see sample above)

=cut

my @to_email;
my $from_email;
my $list;
my $politeness_delay = 5;
my $send_email       = 0;

GetOptions(
  "to=s@"      => \@to_email,
  "from=s"     => \$from_email,
  "sleep=i"    => \$politeness_delay,
  "send-email" => \$send_email,
  "list=s"     => \$list,
);

die "Please provide --list={weekly|daily}"
  unless $list && ($list eq 'weekly' || $list eq 'daily');

my $e        = WWW::Eksi->new;
my @entries  = $list eq 'weekly'
             ? $e->ghebe($politeness_delay)
             : $e->debe($politeness_delay);

my $dow      = DateTime->now->day_of_week;
my $ymd      = DateTime->now->ymd;
my $monday   = DateTime->now->subtract(days=>($dow-1));
my $year     = $monday->year;
my $week     = $monday->week_number;
$week        = "0$week" if $week=~/^\d$/;

my $filename = $list eq 'weekly'
             ? "$year-$week"
             : "$ymd";
my $filepath = "/tmp/$filename.html";


# Write html
my $out="<h2>eksi$list $filename</h2><br><hr>\n";
my $i=scalar(@entries)+1;
foreach my $entry (reverse @entries){

  if (length($entry->{body_processed}) > 9*280){ # 9 tweets
    $entry->{body_shortened} = substr($entry->{body_processed},0,8*280-1) . "<br><br><br><a href=\"$entry->{entry_url}\" target=\"_blank\" style=\"text-decoration:none; color:black\"><i>(devam ediyor)</i></a><br>";
  } else {
    $entry->{body_shortened} = $entry->{body_processed};
  }

  $i--;
  $out.=  "
  <h3>$i. <a href=\"$entry->{topic_url}\" target=\"blank\" style=\"text-decoration:none; color:black\">
  $entry->{topic_title}</a></h3><p class=\"big\" style=\"text-align:justify;\">$entry->{body_shortened}
  </p><h5><div align=\"right\">
  (<a href=\"$entry->{author_url}\" target=\"blank\" style=\"text-decoration:none; color:black\">$entry->{author_name}</a>, <a href=\"$entry->{entry_url}\" target=\"blank\" style=\"text-decoration:none; color:black\">$entry->{time_as_seen}, $entry->{fav_count}&#9734;</a>)</div></h5><hr>\n";
}
write_file($filepath,$out);

# Send to email subscribers.
if( $send_email ){
  foreach my $subscriber (@to_email){
    my $msg_mail = MIME::Lite->new(
      From    => $from_email,
      To      => $subscriber,
      Subject => "eksi$list $filename",
      Type    => 'multipart/mixed',
    );

    $msg_mail->attach(
      Type     => 'application/html',
      Path     => "$filepath",
      Filename => "$filename.html",
    );

    $msg_mail->send or next "Error on sending email to $subscriber";
  }
}
